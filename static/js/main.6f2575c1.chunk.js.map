{"version":3,"sources":["components/Event.js","components/EventList.js","components/Alert.js","components/CitySearch.js","components/NumberOfEvents.js","mock-data.js","api.js","components/WelcomeScreen.jsx","components/EventGenre.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleButtonClick","setState","event","this","props","className","summary","location","start","dateTime","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","backgroundColor","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","handleEventNumChange","number","updateNumberOfEvents","e","mockData","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","getAccessToken","accessToken","getItem","checkToken","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","href","result","getEvents","NProgress","startsWith","done","navigator","onLine","JSON","parse","token","url","stringify","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","EventGenre","useState","setData","useEffect","getData","reduce","accumalator","genre","split","includes","push","name","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","App","currentLocation","locationEvents","slice","newNum","city","shift","mounted","isTokenValid","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6f2575c1.chunk.js","sourcesContent":["// src/Event.js\nimport React, { Component } from 'react';\n\nclass Event extends Component {\n    state = {\n        collapsed: true,\n    }\n\n    handleButtonClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    render(){\n        const { event } = this.props;\n        const { collapsed } = this.state;\n        return (\n        <div className=\"Event\">\n            <h2 className=\"summary\">{event.summary}</h2>\n            <p className=\"location\">{event.location}</p>\n\n            {this.state.collapsed === false && (\n                <div className=\"more-details\">\n                 <p className=\"start-date\">\n                     <label>Date: </label>\n                     {event.start.dateTime}\n                </p>\n                 <p className=\"event-description\">\n                    <label>Event Details: </label>\n                     {event.description}\n                </p>\n                 <button \n                    className=\"toggleEvent\"\n                    onClick={this.handleButtonClick}>\n                        Hide Details\n                </button>\n                 </div>\n            )}\n            {this.state.collapsed === true && (\n                <button \n                 className=\"toggleEvent\"\n                 onClick={this.handleButtonClick}>\n                     Show Details\n             </button>\n            )}\n        </div>\n        )\n    }\n}\nexport default Event;\n\n// make a component called EventDetails?","// src/EventList.js\n\nimport React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => \n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n          )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n        this.backgroundColor = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n            backgroundColor: this.backgroundColor\n        };\n    }\n    render () {\n        return (\n            <div className=\"Alert\">\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'blue';\n    }\n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'red';\n    }\n}\n\n\nclass WarningAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'orange';\n        this.backgroundColor = 'black';\n    }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","// src/CitySearch.js\n\nimport React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined,\n        infoText: null\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ showSuggestions: true });\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        if (suggestions.length === 0) {\n            this.setState({\n                query: value,\n                infoText: 'City Not Found. Please try another city',\n            });\n        } else {\n            return this.setState({\n                query: value,\n                suggestions,\n                infoText: ''\n            });\n        }\n    }; // end of handleInputChanged function\n\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false,\n            infoText: ''\n        });\n        this.props.updateEvents(suggestion);\n    }; // end of handleItemClicked function\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                {/* <div className=\"Info-Alert\"> */}\n                    <InfoAlert text={this.state.infoText} />\n                {/* </div> */}\n                <div className=\"CitySearch-Input\">\n                    <h4>City Search:</h4>\n                    <input \n                        type=\"text\" \n                        className=\"city\"\n                        placeholder=\"Search for a city\"\n                        value={this.state.query}\n                        onChange={this.handleInputChanged}\n                        onFocus={() => {this.setState({ showSuggestions: true })}}\n                        />\n                <ul className=\"suggestions\" style={this.state.showSuggestions? {}: { display: 'none'}}>\n                {this.state.suggestions.map((suggestion) => (\n                    <li \n                        key={suggestion}\n                        onClick={() => this.handleItemClicked(suggestion)}\n                    >{suggestion}</li>\n                ))}\n                {/* key all supposed to be here? */}\n                <li onClick={() => this.handleItemClicked('all')}> \n                    <b>See all cities</b>\n                </li>\n                </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\n\nclass NumberOfEvents extends Component {\n    state = {\n        numberOfEvents: 32,\n        infoText: ''\n    }\n\n\n    handleEventNumChange = (event) => {\n        const number = event.target.value;\n        if (number < 0 || number > 32) {\n            this.setState({\n                infoText: 'Please choose a number between 1 and 32'\n            })\n        } else {\n            this.setState({\n                numberOfEvents: number,\n                infoText: ''\n            })\n        };\n        this.props.updateNumberOfEvents(number);\n    } // end of handleEventNumChange function\n\n    render(){\n        return (\n        <div className=\"NumberOfEvents\">\n            <div className=\"Error-Alert\">\n                <ErrorAlert text={this.state.infoText} />\n            </div>\n            <h4>Number Of Events:</h4>\n            <input \n                type=\"number\"\n                className=\"number-input\"\n                value={this.state.numberOfEvents}\n                onChange={(e) => this.handleEventNumChange(e)}/>\n        </div>\n        )\n    }\n}\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       },\n       {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       },\n];\n\n// mockData = JSON.parse(JSON.stringify(mockData)); \n\nexport { mockData };\n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n// EXTRACT LOCATIONS\nexport const extractLocations = (events) => {\n  // map through the events and show only each event location and \n  // assign it to variable \"extractLocations\"\n  var extractLocations = events.map((event) => event.location);\n  // assign locations to be a new set of array/obj data that contains those \n  // extracted locations\n  var locations = [...new Set(extractLocations)];\n  return locations;\n}; // end of extractLocations\n\n\n// REMOVE QUERY\nconst removeQuery = () => {\n  /**\n   * This function removes the code from the url\n   */\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = \n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n}\n\n\n // GET TOKEN \n const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://garziurqxg.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n  .then((res) => {\n    return res.json();\n  })\n  .catch((error) => error);\n  \n  access_token && localStorage.setItem(\"access_token\", access_token);\n  \n  return access_token;\n};\n\n\n\n\n\n\n// GET ACCESS TOKEN\nexport const getAccessToken = async () => {\n  // get access token from local storage\n const accessToken = localStorage.getItem('access_token')\n\n //  assign tokenCheck to get the access token \n // & check if the token is valid through the checkToken() function\n const tokenCheck = accessToken && (await checkToken(accessToken));\n\n // if there is no access token or there is a tokenCheck error...\n if (!accessToken || tokenCheck.error) {\n\n   // it removes any accessToken\n   await localStorage.removeItem(\"access_token\");\n\n   // and checks for an authorization code - searching the URL params for code\n   const searchParams = new URLSearchParams(window.location.search);\n   // when it searches, it gets the code from the URL params & assigns it to code\n   const code = await searchParams.get(\"code\");\n\n   // if no code is found\n   if (!code) {\n     // user is directed to the Google Authorizationn screen to sign in to\n     // recieve their code\n     const results = await axios.get(\n       \"https://garziurqxg.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n     );\n     const { authUrl } = results.data; // it'll then take that entered auth info\n     return (window.location.href = authUrl); // & return that URL with that info\n   }\n   return code && getToken(code); // return code and pass that code into getToken()\n }\n return accessToken; // ELSE return access token\n\n} // end of getAccessToken\n\n\n // CHECK TOKEN\n // IF AN ACCESS TOKEN IS FOUND, YOU WILL CHECK THE TOKENS VALIDITY w/ checkToken()\n export const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n}; // end of checkToken\n\n\n\n\n\n// GET EVENTS\nexport const getEvents = async () => {\n  NProgress.start();\n\n  // if using local host \n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done(); // stop using NProgress to show loading data \n    return mockData; // use mockData\n  }\n\n  // checks if user is online, if user is NOT online, then it looks for the last \n  // events in the localStorage and returns & parses that data \n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data?JSON.parse(data).events:[];;\n  }\n\n  // check for an access token with getAccessToken()\n  const token = await getAccessToken(); \n\n  // if a token is found..\n  if (token) {\n    removeQuery(); // calls the removeQuery() to remove code from URL once done with it\n    // make a get request to Google API / get-events with the found token\n\n    // assign the url to variable \"url\"\n    const url = 'https://garziurqxg.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    \n    // then assign that get request with the \"url\" to variable \"result\"\n    const result = await axios.get(url); \n    // if you get the results from the api's data.. \n\n  \n    if (result.data) {\n      // extract the locations from that api's event data and assign it to \"locations\"\n      var locations = extractLocations(result.data.events);\n\n      // set item \"lastEvents\" in your local storage to be a stringified version of result's data \n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n\n      // set item \"locations\" in your local storage to be a stringified version of those extracted locations\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done(); // stop using NProgress to show loading data \n    return result.data.events; // return all the events from the api \n  }\n}; // end of getEvents\n\n\n \n\n\n\n\n\n  ","import React from \"react\";\nimport './WelcomeScreen.css';\n\n\nfunction WelcomeScreen(props) {\n    return props.showWelcomeScreen ?\n        (\n        <div className=\"WelcomeScreen\">\n            <h1>Welcome to Ev's Meet App!</h1>\n           <h4>Log in to see upcoming events around the world for full-stack developers</h4>\n            <div className=\"button_cont\" align=\"center\">\n                <div class=\"google-btn\">\n                    <div class=\"google-icon-wrapper\">\n                        <img class=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"Google sign-in\" />\n                    </div>\n                    <button onClick={() => { props.getAccessToken() }} rel=\"nofollow noopener\" class=\"btn-text\"><b>Sign in with google</b></button>\n                </div>\n            </div>\n            <a href=\"https://acevelyn.github.io/meet/privacy.html\" rel=\"nofollow noopener\">Privacy policy</a>\n        </div>\n    )\n    : null\n}\n\nexport default WelcomeScreen;","import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nconst EventGenre = ({events}) => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => { setData(() => getData()); }, [events]);\n\n\n    const getData = () => {\n      const genres = [\n        'React', \n        'Javascript', \n        'Node', \n        'jQuery', \n        'AngularJS',\n        'Angular'\n      ];\n\n      const data = genres.reduce(\n        (accumalator, genre) => {\n          const value = events.filter(({ summary }) =>\n             summary.split(' ').includes(genre)\n           ).length;\n\n           if(value !== 0) {\n              accumalator.push({ name: genre, value: value })\n           }\n\n           return accumalator;\n        },\n        []\n      );\n\n      return data;\n    };\n\n    // const getData = () => {\n    //     const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\n    //     const data = genres.map((genre) => {\n    //       const value = events.filter(({ summary }) =>\n    //         summary.split(' ').includes(genre)\n    //       ).length;\n    //       return { name: genre, value: value };\n    //     })\n    //     .filter(({ value }) => {\n    //       return value !== 0\n    //     });\n    //     return data;\n    //   };\n\n    return (\n        <ResponsiveContainer height={400} >\n            <PieChart width={400} height={400}>\n                <Pie\n                    data={data}\n                    cx={200}\n                    cy={200}\n                    labelLine={false}\n                    outerRadius={80}\n                    fill='#8884d8'\n                    dataKey=\"value\"\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                    >    \n                </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default EventGenre;","// src/App.js\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { WarningAlert } from './components/Alert';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport EventGenre from './components/EventGenre';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: 32,\n    showWelcomeScreen: undefined\n    }\n  \n    async componentDidMount() {\n      this.mounted = true;\n      const accessToken = localStorage.getItem('access_token');\n      const isTokenValid = (await checkToken(accessToken)).error ? false :\n      true;\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = searchParams.get(\"code\");\n      this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n      if ((code || isTokenValid) && this.mounted) {\n        getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n            }\n         });\n        }\n      }\n  \n    componentWillUnmount() {\n       this.mounted = false;\n    }\n\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n      events : \n      events.filter((event)=> event.location === location);\n      this.setState({ \n        events: locationEvents.slice(0, this.state.numberOfEvents),\n        currentLocation: location\n      })\n    });\n    }\n\n    updateNumberOfEvents = (number) => {\n      const newNum = number;\n      this.setState({\n        numberOfEvents: newNum\n      });\n      this.updateEvents(this.state.currentLocation);\n    }\n\n    getData = () => {\n      const { locations, events } = this.state;\n      const data = locations.map((location) => {\n        const number = events.filter((event) => event.location === location)\n          .length;\n        const city = location.split(\" \").shift();\n        return { city, number };\n      });\n      return data;\n    };\n\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\"/>\n    \n    return (\n      <div className=\"App\">\n        <div className=\"App-Header\">\n          <h1 className=\"title\">Ev's Meet App</h1>\n          <p className=\"header\">Your go-to app for events near you!</p>\n        </div>\n\n        { !navigator.onLine ? (<WarningAlert text='You are offline, data is not up to date' />) : (<WarningAlert text=' ' />)}\n        \n\n        <CitySearch \n          locations={this.state.locations} \n          updateEvents={this.updateEvents}\n          />\n\n        <NumberOfEvents \n          numberOfEvents={this.state.numberOfEvents} \n          updateNumberOfEvents={this.updateNumberOfEvents} \n         />\n      <div className=\"data-vis-wrapper\">\n        <h3>Events in Each City</h3>\n        <EventGenre events={this.state.events} />\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{ top: 20, right: 20, bottom: 20, left: 20,}} >\n            <CartesianGrid />\n            <XAxis \n              type=\"category\" \n              dataKey=\"city\" \n              name=\"city\" />\n            <YAxis \n              allowDecimals={false}\n              type=\"number\" \n              dataKey=\"number\" \n              name=\"number of events\" \n              />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n      </div>\n        <EventList events={this.state.events} />\n        \n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} \n        getAccessToken={() => { getAccessToken() }} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('fac523a0eb9e4eeb8f9911b24f31a2c9').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n// serviceWorkerRegistration.unregister();\n serviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}